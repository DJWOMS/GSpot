# Generated by Django 4.1.7 on 2023-04-25 20:54

import uuid

import apps.base.fields
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('payment_accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ItemPurchase',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'item_price',
                    apps.base.fields.MoneyField(
                        decimal_places=2,
                        max_digits=11,
                        validators=[
                            django.core.validators.MinValueValidator(
                                0,
                                message='Should be positive value',
                            ),
                            django.core.validators.MaxValueValidator(
                                10000,
                                message='Should be not greater than 10000',
                            ),
                        ],
                    ),
                ),
                ('item_uuid', models.UUIDField(db_index=True, editable=False)),
                (
                    'status',
                    models.CharField(
                        choices=[('PN', 'PENDING'), ('PD', 'PAID'), ('RF', 'REFUNDED')],
                        max_length=50,
                    ),
                ),
                (
                    'account_from',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='item_purchase_account_from',
                        to='payment_accounts.account',
                    ),
                ),
                (
                    'account_to',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='item_purchase_account_to',
                        to='payment_accounts.account',
                    ),
                ),
                (
                    'developer_id',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='developer_info',
                        to='payment_accounts.account',
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='TransferHistory',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'amount',
                    apps.base.fields.MoneyField(
                        decimal_places=2,
                        editable=False,
                        max_digits=11,
                        validators=[
                            django.core.validators.MinValueValidator(
                                0,
                                message='Should be positive value',
                            ),
                        ],
                    ),
                ),
                ('created_date', models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    'account_from',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='history_accounts_from',
                        to='payment_accounts.account',
                    ),
                ),
                (
                    'account_to',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='history_accounts_to',
                        to='payment_accounts.account',
                    ),
                ),
            ],
            options={
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='ItemPurchaseHistory',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('created_date', models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    'event_type',
                    models.CharField(
                        choices=[('CT', 'CREATED'), ('CD', 'COMPLETED')],
                        max_length=50,
                    ),
                ),
                (
                    'item_purchase_id',
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='item_purchases_history',
                        to='item_purchases.itempurchase',
                    ),
                ),
            ],
            options={
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                (
                    'invoice_id',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ('is_paid', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('item_purchases', models.ManyToManyField(to='item_purchases.itempurchase')),
            ],
            options={
                'ordering': ['-created_date'],
            },
        ),
    ]
