# Generated by Django 4.1.7 on 2023-03-21 12:22

import django.contrib.auth.models
import django.contrib.contenttypes.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('admins', '0001_auto'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=16, verbose_name='Service Name')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100, verbose_name='python model class name')),
            ],
            options={
                'verbose_name': 'admin content type',
                'verbose_name_plural': 'admin content types',
                'db_table': 'admin_content_type',
                'abstract': False,
                'unique_together': {('service_name', 'app_label', 'model')},
            },
            managers=[
                ('objects', django.contrib.contenttypes.models.ContentTypeManager()),
            ],
        ),
        migrations.AlterField(
            model_name='admin',
            name='email',
            field=models.EmailField(db_index=True, max_length=254, unique=True, verbose_name='email address'),
        ),
        migrations.CreateModel(
            name='AdminPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('codename', models.CharField(max_length=100, verbose_name='codename')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admins.admincontenttype', verbose_name='content type')),
            ],
            options={
                'verbose_name': 'admin permission',
                'verbose_name_plural': 'admin permissions',
                'db_table': 'admin_permission',
                'ordering': ['content_type__app_label', 'content_type__model', 'codename'],
                'abstract': False,
                'unique_together': {('content_type', 'codename')},
            },
            managers=[
                ('objects', django.contrib.auth.models.PermissionManager()),
            ],
        ),
        migrations.CreateModel(
            name='AdminGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='name')),
                ('permissions', models.ManyToManyField(blank=True, related_query_name='group', to='admins.adminpermission', verbose_name='permissions')),
            ],
            options={
                'verbose_name': 'admin group',
                'verbose_name_plural': 'admin groups',
                'db_table': 'admin_group',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.AddField(
            model_name='admin',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='admins.admingroup', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='admin',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='admins.adminpermission', verbose_name='user permissions'),
        ),
    ]
